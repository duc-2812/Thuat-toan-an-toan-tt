#include <stdio.h>
#include <math.h>
int bit, t, A, p, a[50], s;

void nhap()
{
    t = 0;
    printf("Nhap so bit: ");
    scanf("%d", &bit);
    while (t < 1)
    {
        printf("Nhap t: ");
        scanf("%d", &t);
    }
}

int tim_r(int x)
{
    while (x % 2 == 0)
    {
        x = x / 2;
    }
    return x;
}

int binhPhuong(int x, int v, int y)
{
    int u = 0;
    while (x != 0)
    {
        a[u] = x % 2;
        x = x / 2;
        u++;
    }
    p = 1;
    for (int i = u - 1; i >= 0; i--)
    {
        A = p * p % y;
        if (a[i] == 1)
        {
            p = A * v % y;
        }
        else if (a[i] == 0)
        {
            p = A;
        }
    }
    return p;
}
int random(int x, int y)
{
    int tmp;
    if (x > y)
    {
        tmp = x;
        x = y;
        y = tmp;
    }
    return x + rand() % (y + 1 - x);
}
int kiemTra(int x)
{
    int r = tim_r(x-1);
    s = log((x - 1) / r) / log(2);
    for (int i = 0; i <= t; i++)
    {
        int a = random(2, x - 2);
        binhPhuong(x - 1, a, x);
        if (p != 1 && p != x - 1)
        {
            int j = 1;
            while (j <= s - 1 && p != x - 1)
            {
                p = p * p % x;
                if (p == 1)
                {
                    return 0;
                }
                j += 1;
            }
            if (p != x - 1)
            {
                return 0;
            }
        }
    }
    return 1;
}

int main()
{
    nhap();
    int m, n, max = 0;
    for (int i = 0; i < bit; i++)
    {
        max = max + pow(2, i);
    }
    while (m != 1)
    {
        n = 3 + rand() % (max + 1 - 3);
        printf("%5d", n);
        if (n % 2 != 0)
        {
            m = kiemTra(n);

            if (m == 1)
            {
                break;
            }
        }
    }
    printf("\n%d la so nguyen to", n);
}
