
#include <stdio.h>
#include <math.h>

int n, t, s, mang[50], A, p, a;
int k = 0;
void nhap()
{
    n = 0;
    t = 0;
    while (n < 3)
    {
        printf("nhap n (>=3) = ");
        scanf("%d", &n);
    }

    while (t < 1)
    {
        printf("nhap t (>=1) = ");
        scanf("%d", &t);
    }
}
int tim_r(int k)
{
    int r;

    while (r % 2 == 0)
    {
        r = k / 2;
        k = k / 2;
    }
    return r;
}
int random(int min, int max)
{
    int tg;
    if (min > max)
    {
        tg = min;
        min = max;
        max = tg;
    }
    return min + rand() % (max + 1 - min);
}
int binhPhuong(int x, int v)
{

    while (x != 0)
    {
        mang[k] = x % 2;
        x = x / 2;
        k++;
    }
    p = 1;
    for (int i = k - 1; i >= 0; i--)
    {
        A = (p * p) % n;
        if (mang[i] == 1)
        {
            p = (v * A) % n;
        }
        else if (mang[i] == 0)
        {
            p = A;
        }
    }
    return p;
}

int tinh()
{

    int r = tim_r(n);
    s = log((n - 1) / r) / log(2);

    for (int i = 1; i <= t; i++)
    {
        a = random(2, n - 2);
        printf("\n voi a= %d thi ", a);
        binhPhuong(r, a);
        if (p != 1 && p != (n - 1))
        {
            int j = 1;
            while (j <= (s - 1) && p != (n - 1))
            {
                p = p * p % n;
                if (p == 1)
                {
                    printf("hop so");
                    return 0;
                }
                j = j + 1;
            }
            if (p != (n - 1))
            {
                printf("hop so");
                return 0;
            }
        }
        printf("nguyen to");
    }
    
}
int main()
{
    nhap();
    int o = tinh();
    return 0;
}
