#include <stdio.h>
#include <math.h>

int p, w, m, t, a[50], b[50], c[50], n;
int x, e;
void nhap()
{
    printf("\nNhap p: ");
    scanf("%d", &p);
    printf("Nhap w: ");
    scanf("%d", &w);
    //	printf("Nhap so phan tu co trong mang: ");
    //	scanf("%d",&n);

    printf("\nCac phan tu trong a:");
    for (int i = 0; i < 4; i++)
    {
        scanf("%d", &a[i]);
        printf("% d  ", a[i]);
    }
    printf("\nCac phan tu trong b:");
    for (int i = 0; i < 4; i++)
    {
        scanf("%d", &b[i]);
        printf("% d  ", b[i]);
    }
}

void CongTrenFp()
{ // tim (Ep,c)
    m = log(p) / log(2) + 1;
    t = (m / w) + 1;
    e = 0; // epsilo
    int tmp = pow(2, w);
    printf("\n  c:");
    for (int i = t - 1; i >= 0; i--)
    {
        c[i] = a[i] + b[i] + e;
        if (c[i] > tmp)
        {
            c[i] = c[i] - tmp;
            e = 1;
        }
        else
        {
            e = 0;
        }
    }
    for (int i = 0; i < t; i++)
    {
        printf("%d  ", c[i]);
    }
    printf("\t Voi e=%d", e);
    // xet e để tìm c cuối
    int x = 0; //  x la gia tri c khi chuyen ve so nguyen
               // chuyển c từ mảng về số tự nhiên để so sánh với p
    for (int i = 0; i < t; i++)
    {
        x = x + c[i] * pow(2, w * (t - 1 - i));
    }

    if (e == 1)
    {
        // so sanh c vs p de tim ra c' cuoi duoi' dang. mang? nhi. phan
        int cNew, uoc;
        cNew = p - x;
        printf(" \n c' = %d ", cNew);
        printf(" C' dc bieu dien duoi dang nhi phan:  ");
        for (int i = t - 1; i >= 0; i--)
        {
            uoc = cNew / pow(2, w * i);
            cNew = cNew - (uoc * pow(2, w * i));
            printf(" %d", uoc);
        }
    }
    else if (x >= p)
    {
        int cNew, uoc;
        cNew = x - p;
        printf(" C' dc bieu dien duoi dang nhi phan:  ");
        for (int i = t - 1; i >= 0; i--)
        {
            uoc = cNew / pow(2, w * i);
            cNew = cNew - (uoc * pow(2, w * i));
            printf(" %d", uoc);
        }
    }
    else
    {
        printf("\n C'= ");
        for (int i = 0; i < t; i++)
        {
            printf("%d  ", c[i]);
        }
    }
}
int main()
{
    printf("\n\t================");
    nhap();
    CongTrenFp();
}
